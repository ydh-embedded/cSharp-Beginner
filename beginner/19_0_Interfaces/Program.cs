namespace _19_0_Interfaces;

class Program
{
    static void Main(string[] args)
    {
            Console.WriteLine(@"

            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%###%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%##*******##%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
            @@@@@@@@@@@@@@@@@@@@@@@@@@@%#***************##%%@@@@@@@@@@@@@@@@@@@@@@@@@@
            @@@@@@@@@@@@@@@@@@@@@@@@@###*******************###%@@@@@@@@@@@@@@@@@@@@@@@
            @@@@@@@@@@@@@@@@@@@@%%#****************************##%%@@@@@@@@@@@@@@@@@@@
            @@@@@@@@@@@@@@@@@%%##**********************************##%%@@@@@@@@@@@@@@@
            @@@@@@@@@@@@@@@###***************************************#*#%@@@@@@@@@@@@@
            @@@@@@@@@@%%##******************+++++++++++******************##%%@@@@@@@@@
            @@@@@@@%##*****************+=-----------------=+*****************###%@@@@@
            @@@@@%##****************=-------------------------=+****************##%@@@
            @@@@##***************+-------------------------------+************####%@@@
            @@@@***************+-----------------------------------+*******#######%@@@
            @@@@**************=------------=+*********+==-----------=***##########%@@@
            @@@@*************-----------+*****************+----------+##%#########%@@@
            @@@@************----------+*********************+----=+*##############%@@@
            @@@@***********----------*************************+*######%+++##*++###%@@@
            @@@@**********+---------**********************#############--=##---###%@@@
            @@@@**********---------+******************####%%#######*===---==---=##%@@@
            @@@@**********---------****************####%###########*==---==---++##%@@@
            @@@@**********---------************####%#################*--+##--=####%@@@
            @@@@**********=--------+*****###########################+--=**---***##%@@@
            @@@@***********---------+########################%######+--*#*--+#####%@@@
            @@@@***********=---------+#######################*-=*#################%@@@
            @@@@************=---------=*###################*=-----=+*#############%@@@
            @@@@***********##+-----------+*##############+=----------+############%@@@
            @@@@*******#######*-------------=++*****++=-------------+#############%@@@
            @@@@****############+---------------------------------+###############%@@@
            @@@@%###%#%###########+=----------------------------+##%#############%%@@@
            @@@@@%%%#################+=---------------------=+*###############%%%%@@@@@
            @@@@@@@@@%%%%###############*++=-----------==+*###############%%%%@@@@@@@@
            @@@@@@@@@@@@@%%%###############%%#########################%%%%@@@@@@@@@@@@
            @@@@@@@@@@@@@@@@%%%%###################################%%%%@@@@@@@@@@@@@@@
            @@@@@@@@@@@@@@@@@@@@%%#############################%#%%%@@@@@@@@@@@@@@@@@@
            @@@@@@@@@@@@@@@@@@@@@@%%#%#######################%%%%@@@@@@@@@@@@@@@@@@@@@
            @@@@@@@@@@@@@@@@@@@@@@@@@@%%%%#################%@@@@@@@@@@@@@@@@@@@@@@@@@@
            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%#########%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@
            @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%####%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

            

            **************************************************************************

                Interfaces - IShape

                Ein Interface ist eine völlig abstrakte Klasse,
                die nur abstrakte Mitglieder enthält.

                Es wird mit dem Schlüsselwort interface deklariert: 
                public interface IShape
                {
                        void Draw();
                }

                Alle Mitglieder des Interfaces sind standardmäßig abstrakt,
                daher besteht keine Notwendigkeit,
                das Schlüsselwort abstrakt zu verwenden.

                Schnittstellen können öffentliche (standardmäßig),
                private und geschützte Mitglieder haben.


                Info:

                Es ist üblich, den Großbuchstaben I als Anfangsbuchstaben
                für einen Interface-Namen zu verwenden.

                Interfaces können Eigenschaften, Methoden usw. enthalten,
                dürfen jedoch keine Felder (Variablen) enthalten.

                
                Wenn eine Klasse eine Schnittstelle implementiert,
                muss sie auch alle ihre Methoden implementieren oder
                definieren.

                Der Begriff Implementierung einer Schnittstelle wird
                verwendet (im Gegensatz zum Begriff Vererbung von)
                um den Prozess der Erstellung einer Klasse basierend
                auf einer Schnittstelle zu beschreiben.
                Die Schnittstelle beschreibt lediglich,
                was eine Klasse tun sollte. Die Klasse,
                die die Schnittstelle implementiert, muss definieren,
                wie die Verhaltensweisen erreicht werden sollen.

                Die Syntax zur Implementierung einer Schnittstelle ist
                die gleiche wie die zur Ableitung einer Klasse: 


            **************************************************************************");

    }
}
